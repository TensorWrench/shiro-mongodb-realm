/*
Copyright 2013 TensorWrench, LLC 

Licensed under the Apache License, Version 2.0 (the "License"); 
you may not use this file except in compliance with the License. 
You may obtain a copy of the License at 

http://www.apache.org/licenses/LICENSE-2.0 

Unless required by applicable law or agreed to in writing, software 
distributed under the License is distributed on an "AS IS" BASIS, 
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
See the License for the specific language governing permissions and 
limitations under the License.
*/
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'pmd'
apply from:"file:src/gradle/emma.gradle"
apply from:"file:src/gradle/backgroundTask.gradle"
apply plugin: 'maven'

//===============================================
// Project settings
//===============================================
ext {
	mongoDir=new File("$buildDir/mongo-data");
	testngVersion='6.8'
	mongoDriverVersion='2.11.+'
	shiroVersion='1.2.+'
}

version = '1.0' + (hasProperty("isRelease")?"":"-SNAPSHOT")
group 'com.tensorwrench.shiro'
sourceCompatibility = 1.7

if(!hasProperty("repoUrl")) {
	ext.repoUrl="${buildDir}/mvnRepo"
}
//===============================================
// Build Tools
//===============================================
buildscript {
	repositories { 
		mavenCentral() 
	}  
}

//===============================================
// Dependency info
//===============================================
repositories {
	mavenLocal()
  mavenCentral()
}

dependencies {
	compile(
			"org.mongodb:mongo-java-driver:${mongoDriverVersion}"
			, "org.testng:testng:${testngVersion}"
			,"org.apache.shiro:shiro-core:${shiroVersion}"
  )
	
	testCompile(
			"com.tensorwrench.testng:mongodb-testng:1.+"
	)
	
	emma "emma:emma:2.0.5312", "emma:emma_ant:2.0.5312"
}

//===============================================
// Project Overhead
//===============================================
task wrapper(type: Wrapper) {
	gradleVersion="1.6"
}

eclipse.classpath {
	downloadJavadoc = true
	downloadSources = true
	defaultOutputDir = file("$buildDir/build-eclipse")
}

//===============================================
// Documentation
//===============================================

javadoc {
	source=sourceSets.main.allJava
	destinationDir = reporting.file("javadocs")
}

//===============================================
// Testing
//===============================================
test {
	useTestNG()
}
test.dependsOn "startMongoDB"

//==========================================================================
// Artifact Information
//==========================================================================
jar {
	manifest {
		attributes 'Title': 'shiro-mongodb-realm',
				       'Version': version
	}
}

task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives(sourcesJar)
	archives(javadocJar)
}
def customizePom(pom) {
	pom.project {
		packaging "jar"
		name "shiro-mongodb-realm"
		description "MongoDB Realm for Apache Shiro"
		url "https://github.com/TensorWrench/shiro-mongodb-realm"
		scm {
			connection "scm:git:https://github.com/TensorWrench/shiro-mongodb-realm"
			url "https://github.com/TensorWrench/shiro-mongodb-realm"
		}
		developers {
			developer {
				id "jason"
				name "Jason Wagner"
			}
		}
		licenses {
			license {
				name 'The Apache Software License, Version 2.0'
				url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
				distribution 'repo'
			}
		}
	}
}

install {
	repositories.mavenInstaller {
		pom.groupId = project.group
		customizePom(pom)
	}
}

uploadArchives {
		repositories {
			 mavenDeployer {
					 repository(url: new File(repoUrl).toURI())
					 pom.groupId = project.group
					 customizePom(pom)
			 }
		}
}

//==========================================================================
// Setup mongodb

backgroundTask {
	processName="MongoDB"
	group='Mongo'
	commandLine=["mongod","--dbpath",mongoDir.getCanonicalPath()];
	workDir=mongoDir
}
